@model IEnumerable<SuperShop.Data.Entity.Product>
@using SuperShop.Controllers;


@{
    ViewData["Title"] = "Index";
}

<h1>Lista de Produtos</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-sortField="@ProductsController.SortField.Name"
                   asp-route-ascending="@((ViewData["SortField"] as ProductsController.SortField? == ProductsController.SortField.Name && !(bool)ViewData["Ascending"]) ? true : false)">
                    @Html.DisplayNameFor(model => model.Name) @GetSortIcon(ProductsController.SortField.Name)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortField="@ProductsController.SortField.Price"
                   asp-route-ascending="@((ViewData["SortField"] as ProductsController.SortField? == ProductsController.SortField.Price && !(bool)ViewData["Ascending"]) ? true : false)">
                    @Html.DisplayNameFor(model => model.Price) @GetSortIcon(ProductsController.SortField.Price)
                </a>
            </th>   
            <th>
                <a asp-action="Index"
                   asp-route-sortField="@ProductsController.SortField.Stock"
                   asp-route-ascending="@((ViewData["SortField"] as ProductsController.SortField? == ProductsController.SortField.Stock && !(bool)ViewData["Ascending"]) ? true : false)">
                    @Html.DisplayNameFor(model => model.Stock) @GetSortIcon(ProductsController.SortField.Stock)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortField="@ProductsController.SortField.Availability"
                   asp-route-ascending="@((ViewData["SortField"] as ProductsController.SortField? == ProductsController.SortField.Availability && !(bool)ViewData["Ascending"]) ? true : false)">
                    @Html.DisplayNameFor(model => model.IsAvailable) @GetSortIcon(ProductsController.SortField.Availability)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>

                <td>
                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                    {
                        <img src="@Url.Content(item.ImageUrl)" alt="Image" style="width:100px;height:150px;max-width:100%;height:auto">
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.Stock)</td>

                <td>@Html.DisplayFor(modelItem => item.IsAvailable)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@functions {
    string GetSortIcon(ProductsController.SortField field)
    {
        var currentField = ViewData["SortField"] as ProductsController.SortField?;
        var ascending = ViewData["Ascending"] as bool? ?? true;

        if (currentField == field)
        {
            return ascending ? "↑" : "↓";
        }
        return "";
    }
}